version: '3'

services:

  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tmp/tempo-data:/var/tempo

  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
      - ./tmp/tempo-data:/var/tempo
    ports:
      - "3200:3200" # tempo
      - "4317:4317" # otlp/tempo grpc
    depends_on:
      - init
      #- otel-collector
    networks:
      - observe-network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - ./tmp/prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-remote-write-receiver'
      - '--enable-feature=native-histograms'
    ports:
      - "9090:9090"
    networks:
      - observe-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  #otel-collector:
  #  image: otel/opentelemetry-collector:0.86.0
  #  command: [ "--config=/etc/otel-collector.yaml" ]
  #  volumes:
  #    - ./otel-collector/otel-collector.yaml:/etc/otel-collector.yaml
  #  ports:
  #    - "5156:4317" # random 5156 port mapped to otlp grpc 4317
  #  networks:
  #    - observe-network

  grafana:
    image: grafana/grafana:11.0.0
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_PLUGIN_ALLOW_LOCAL_MODE=true
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_SERVER_HTTP_PORT=3000
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor,traceToMetrics,serviceGraphs
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - tempo
    networks:
      - observe-network

networks:
  observe-network:
    driver: bridge