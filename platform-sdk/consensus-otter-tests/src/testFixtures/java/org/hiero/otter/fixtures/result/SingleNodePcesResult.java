// SPDX-License-Identifier: Apache-2.0
package org.hiero.otter.fixtures.result;

import com.swirlds.platform.event.preconsensus.PcesFile;
import com.swirlds.platform.event.preconsensus.PcesMultiFileIterator;
import edu.umd.cs.findbugs.annotations.NonNull;
import java.io.IOException;
import java.util.Iterator;
import org.hiero.consensus.model.event.PlatformEvent;
import org.hiero.consensus.model.node.NodeId;

/**
 * A {@link SingleNodePcesResult} provides access to a group of related PCES files that were generated by a single node.
 */
public interface SingleNodePcesResult {

    /**
     * Returns the node ID of the files' node
     *
     * @return the node ID
     */
    NodeId nodeId();

    /**
     * Returns an {@link Iterator} over the current PcesFiles.
     *
     * @return the {@code Iterator}
     */
    @NonNull
    Iterator<PcesFile> pcesFiles();

    /**
     * Returns a {@link PcesMultiFileIterator} for all events stored in current PcesFiles.
     *
     * @return the {@link PcesMultiFileIterator}
     */
    @NonNull
    PcesMultiFileIterator pcesEvents();

    default PlatformEvent lastPcesEvent() {
        PlatformEvent lastEvent = null;
        try (final PcesMultiFileIterator iterator = pcesEvents()) {
            while (iterator.hasNext()) {
                lastEvent = iterator.next();
            }
        }catch (final IOException e) {
            throw new RuntimeException("Failed to read PCES events", e);
        }
        return lastEvent;
    }
}
