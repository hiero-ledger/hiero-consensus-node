/**
 * # Consensus Service API
 * GRPC service definitions for the Hedera Consensus Service (HCS).
 *
 * ### Keywords
 * The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
 * "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
 * document are to be interpreted as described in
 * [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
 * [RFC8174](https://www.ietf.org/rfc/rfc8174).
 */
syntax = "proto3";

package proto;

// SPDX-License-Identifier: Apache-2.0
option java_package = "com.hederahashgraph.service.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.clpr">>> This comment is special code for setting PBJ Compiler java package

import "services/query.proto";
import "services/response.proto";
import "services/transaction_response.proto";
import "services/transaction.proto";

/**
 * The CLPR Service provides the ability to perform interledger communication
 * between two CLPR Endpoints.
 *
 */
service ClprService {
    /**
     * Sets a remote ledger's configuration to enable interledger communication.
     * <p>
     * If the `stateProof` is for an older configuration of the remote ledger
     * than what is currently in the state, this has no effect.
     * <p>
     * The request body MUST be a
     * [ClprSetRemoteLedgerConfigurationTransactionBody](#proto.ClprSetRemoteLedgerConfigurationTransactionBody)
     */
    rpc setRemoteLedgerConfiguration (Transaction) returns (TransactionResponse);

    /**
     * Retrieves the CLPR ledger configuration of this ledger or for a
     * remote ledger whose configuration has been set.
     * <p>
     * The request body MUST be a
     * [ClprGetLedgerConfigurationQuery](#proto.ClprGetLedgerConfigurationQuery)<br/>
     * The response body SHALL be a
     * [ClprGetLedgerConfigurationResponse](#proto.ClprGetLedgerConfigurationResponse)
     */
    rpc getLedgerConfiguration (Query) returns (Response);
}
