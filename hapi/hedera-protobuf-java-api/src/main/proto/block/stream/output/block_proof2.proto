/**
 * # Block Proof (v2)
 * TODO
 * Going to use a new block proof definition for now, replacing pieces until the original Block Proof
 * definition isn't used. Then we'll remove the original.
 *
 * ### Keywords
 * The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
 * "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
 * document are to be interpreted as described in
 * [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
 * [RFC8174](https://www.ietf.org/rfc/rfc8174).
 */
syntax = "proto3";

package com.hedera.hapi.block.stream.output;

// SPDX-License-Identifier: Apache-2.0
option java_package = "com.hedera.hapi.block.stream.output.protoc";
// <<<pbj.java_package = "com.hedera.hapi.block.stream.output">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

import "block/stream/record_file_item.proto";

/**
 * TODO
 */
message BlockFooter {

  /**
   * TODO
   */
  bytes previous_block_root_hash = 1;

  /**
   * TODO
   */
  bytes root_hash_of_all_block_hashes_tree = 2;

  /**
   * TODO
   */
  bytes start_of_block_state_root_hash = 3;
}

message TssSignedBlockProof {
  bytes block_signature = 4;

  // TODO: probably will be deleted?
  oneof verification_reference {
    uint64 scheme_id = 6;
    bytes verification_key = 7; // extracted from ledger ID?
  }
}

message SignedRecordFileProof {
  /**
   * A collection of RSA signatures from consensus nodes.<br/>
   * These signatures validate the hash of the record_file_contents field.
   */
  repeated com.hedera.hapi.block.stream.RecordFileSignature record_file_signatures = 1;
}
