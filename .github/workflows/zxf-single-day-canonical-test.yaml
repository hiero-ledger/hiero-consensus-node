# SPDX-License-Identifier: Apache-2.0
name: "[QUEST] Big Apps Test"

on:
  workflow_dispatch:
    inputs:
      ref:
        required: true
        default: "main"
        description: "Version of hiero-consensus-node: branch, tag, commit."
        type: string
      build-tag:
        required: true
        description: "build-XXXXX tag associated with the ref input."
        type: string

defaults:
  run:
    shell: bash

permissions:
  contents: read
  id-token: write

jobs:
  big-apps-test:
    name: BigApps
    runs-on: hiero-citr-linux-large

    timeout-minutes: 120 # max two hours timeout

  canonical-test:
    name: Canonical
    runs-on: hiero-citr-linux-large

    timeout-minutes: 90 # max one hour timeout

    outputs:
      harden-runner: ${{ steps.harden-runner.outcome }}
      checkout-code: ${{ steps.checkout-code.outcome }}
      kubectl: ${{ steps.kubectl.outcome }}
      install-tools: ${{ steps.install-tools.outcome }}
      parameters: ${{ steps.parameters.outcome }}
      check-if-exist: ${{ steps.check-if-exist.outcome }}
      start-canonical-test: ${{ steps.start-canonical-test.outcome }}
      summary: ${{ steps.summary.outcome }}
      commit: ${{ steps.parameters.outputs.sha || 'N/A' }}

    steps:
      - name: Harden Runner
        id: harden-runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout Code
        id: checkout-code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true
          token: ${{ github.token }}
          persist-credentials: false

      - name: Install Kubectl
        id: kubectl
        uses: step-security/setup-kubectl@2edbf6aff97d814e9dc52827498ac51fe972e6d0 # v4.0.0
        with:
          version: v1.33.0



    steps:
      - name: Harden Runner
        id: harden-runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout Code
        id: checkout-code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true
          token: ${{ github.token }}
          persist-credentials: false

      - name: Install Kubectl
        id: kubectl
        uses: step-security/setup-kubectl@2edbf6aff97d814e9dc52827498ac51fe972e6d0 # v4.0.0
        with:
          version: v1.33.0

      - name: Install Utility Tools
        id: install-tools
        run: |-
          # log functions
          log_info() { echo "[$(date '+%Y-%m-%d %T')] ℹ️  $1"; }
          log_pass() { echo "[$(date '+%Y-%m-%d %T')] ✅ $1"; }

          set +x
          set +e
          export TERM=vt100
          cat /etc/*elease
          sudo apt-get update -qq
          sudo apt-get install -y --no-install-recommends \
            net-tools iputils-ping node-typescript \
            jq=1.6-* curl=7.81.0-*

          log_info "Verifying tool installations..."
          echo "JQ Version: $(jq --version)"
          echo "Curl Version: $(curl --version | head -1)"

          log_pass "All tools successfully installed and verified"

      - name: Setup Node
        id: setup-node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20.18.0

      # Set up kind; needed for configuring the solo environment
      - name: Setup Kind
        id: setup-kind
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          install_only: true
          node_image: kindest/node:v1.31.4@sha256:2cb39f7295fe7eafee0842b1052a599a4fb0f8bcf3f83d96c7f4864c357c6c30
          version: v0.26.0
          kubectl_version: v1.31.4
          verbosity: 3
          wait: 120s

      - name: Install Solo
        run: |
          npm install -g "@hashgraph/solo@0.42.0

          # verify the installation
          solo --version

      - name: Deploy with Solo
        env:
          NODE_VERSION: ${{ inputs.ref }}
          SOLO_CLUSTER)NAME: "solo-bigapps"
        run: |
          set +x
          set +e
          curdir="$(pwd)"
          kind create cluster -n "${{ env.SOLO_CLUSTER_NAME }}"
          export CONSENSUS_NODE_VERSION="${NODE_VERSION}"
          solo quick-start single deploy | tee ${curdir}/solo.out
          kubectl get pods
          kubectl get svc
