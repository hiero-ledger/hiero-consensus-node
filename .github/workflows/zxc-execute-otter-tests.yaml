# SPDX-License-Identifier: Apache-2.0
name: "ZXC: [Node] Compile Application Code"
on:
  workflow_call:
    inputs:
      enable-integration-tests:
        description: "Integration Testing Enabled"
        type: boolean
        required: false
        default: false
      enable-fast-otter-tests:
        description: "Fast Otter Testing Enabled"
        type: boolean
        required: false
        default: false
      enable-full-otter-tests:
        description: "Full Otter Testing Enabled"
        type: boolean
        required: false
        default: false
      enable-network-log-capture:
        description: "Network Log Capture Enabled"
        type: boolean
        required: false
        default: false
      java-distribution:
        description: "Java JDK Distribution:"
        type: string
        required: false
        default: "temurin"
      java-version:
        description: "Java JDK Version:"
        type: string
        required: false
        default: "21.0.6"
      node-version:
        description: "NodeJS Version:"
        type: string
        required: false
        default: "20"
      custom-job-label:
        description: "Custom Job Label:"
        type: string
        required: false
        default: "Compiles"
      ref:
        description: "The branch, tag or SHA to checkout."
        required: false
        type: string
    secrets:
      access-token:
        description: "The Github access token used to checkout the repository, submodules, and make GitHub API calls."
        required: true
      gradle-cache-username:
        description: "The username used to authenticate with the Gradle Build Cache Node."
        required: true
      gradle-cache-password:
        description: "The password used to authenticate with the Gradle Build Cache Node."
        required: true
    outputs:
      description: "Indicates the failure mode of the job, if any."
      value: ${{ jobs.otter.outputs.failure-mode }}

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  actions: read
  pull-requests: write
  statuses: write
  checks: write
  contents: read

env:
  GRADLE_CACHE_USERNAME: ${{ secrets.gradle-cache-username }}
  GRADLE_CACHE_PASSWORD: ${{ secrets.gradle-cache-password }}
  GRADLE_EXEC: ionice -c 2 -n 2 nice -n 19 ./gradlew
  CG_EXEC: ionice -c 2 -n 2 nice -n 19

jobs:
  otter:
    name: ${{ inputs.custom-job-label || 'Otter Tests' }}
    runs-on: hiero-otter-linux-linux-large
    outputs:
      failure-mode: ${{ steps.calculate-failure-mode.outputs.failure-mode }}
    steps:
      - name: Harden Runner
        id: harden-runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout Code
        id: checkout-code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.ref || '' }}

      - name: Setup Java
        id: setup-java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Setup Gradle
        id: setup-gradle
        uses: gradle/actions/setup-gradle@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4.4.1
        with:
          cache-read-only: false

      - name: Setup NodeJS
        id: setup-node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ inputs.node-version }}

      - name: Compile
        id: gradle-build
        run: ${GRADLE_EXEC} assemble :yahcli:assemble

      - name: Fast Otter Testing
        id: gradle-fast-otter-tests
        if: ${{ inputs.enable-fast-otter-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        env:
          LC_ALL: en.UTF-8
          LANG: en_US.UTF-8
        run: ${GRADLE_EXEC} :consensus-otter-tests:testOtter

      - name: Full Otter Testing
        id: gradle-full-otter-tests
        if: ${{ inputs.enable-full-otter-tests && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        env:
          LC_ALL: en.UTF-8
          LANG: en_US.UTF-8
        run: ${GRADLE_EXEC} :consensus-otter-tests:testContainer

      - name: Publish Otter Testing Report
        uses: step-security/publish-unit-test-result-action@5d195d4dec0b9fa7b51a3dbc4298362a021247c7 # v2.20.4
        if: ${{ (inputs.enable-fast-otter-tests || inputs.enable-full-otter-tests) && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          check_name: "Node: Otter Tests Results"
          json_thousands_separator: ","
          junit_files: "**/consensus-otter-tests/build/test-results/testOtter/TEST-*.xml"
          comment_mode: errors # only comment if we could not find or parse the JUnit XML files

      - name: Upload Otter Tests Report Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ (inputs.enable-fast-otter-tests || inputs.enable-full-otter-tests) && steps.gradle-build.conclusion == 'success' && !cancelled() }}
        with:
          name: Otter Tests Report
          path: "**/consensus-otter-tests/build/test-results/testOtter/TEST-*.xml"
          retention-days: 7

      - name: Upload Otter Tests Turtle Logs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ (inputs.enable-fast-otter-tests || inputs.enable-full-otter-tests) && inputs.enable-network-log-capture && steps.gradle-otter-tests.conclusion == 'failure' && !cancelled() }}
        with:
          name: Otter Tests Turtle Logs
          path: |
            platform-sdk/consensus-otter-tests/build/turtle/**
          retention-days: 7

      - name: Upload Otter Tests Container Logs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ (inputs.enable-fast-otter-tests || inputs.enable-full-otter-tests) && inputs.enable-network-log-capture && steps.gradle-otter-tests.conclusion == 'failure' && !cancelled() }}
        with:
          name: Otter Tests Container Logs
          path: |
            platform-sdk/consensus-otter-tests/build/container/**
          retention-days: 7

      - name: Check Results
        id: calculate-failure-mode
        if: ${{ always() }}
        run: |
          ci_cd_statuses=(
            "${{ steps.harden-runner.outcome || 'skipped' }}"
            "${{ steps.checkout-code.outcome || 'skipped' }}"
            "${{ steps.setup-java.outcome || 'skipped' }}"
            "${{ steps.setup-gradle.outcome || 'skipped' }}"
            "${{ steps.setup-node.outcome || 'skipped' }}"
          )

          # We can break this down further to set additional failure modes
          general_statuses=(
            "${{ steps.gradle-build.outcome || 'skipped' }}"
            "${{ steps.gradle-full-otter-tests.outcome || 'skipped' }}"
            "${{ steps.gradle-fast-otter-tests.outcome || 'skipped' }}"
          )

          failure_mode="none"

          has_failure() {
            local arr=("$@")
            for status in "${arr[@]}"; do
              [[ "$status" == "failure" ]] && return 0
            done
            return 1
          }

          # General check first
          if has_failure "${general_statuses[@]}"; then
            failure_mode="general"
          fi

          # If no general failure, check CI/CD specific steps
          if has_failure "${ci_cd_statuses[@]}"; then
            failure_mode="workflow"
          fi

          echo "failure-mode=${failure_mode}" >> "${GITHUB_OUTPUT}"
