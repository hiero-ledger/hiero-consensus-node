# SPDX-License-Identifier: Apache-2.0
name: "ZXF: [CITR] XTS Dry Run"
on:
  workflow_dispatch:
    inputs:
      commit_sha:
        required: true
        description: "The commit sha, tag, or branch to check out"
      branch_name:
        required: true
        description: "The branch name, for JRS Panel output"
      enable-extended-test-suite:
        required: true
        type: boolean
        default: true
        description: "Run Extended Test Suite"
      enable-abbreviated-panel:
        required: true
        type: boolean
        default: true
        description: "Run Abbreviated JRS Panel"
      enable-hedera-node-jrs-panel:
        required: true
        type: boolean
        default: true
        description: "Run Hedera Node JRS Panel"
      enable-sdk-tck-regression-panel:
        required: true
        type: boolean
        default: true
        description: "Run SDK TCK Regression Panel"
      enable-mirror-node-regression-panel:
        required: true
        type: boolean
        default: true
        description: "Run Mirror Node Regression Panel"
      enable-rpc-relay-regression-panel:
        required: true
        type: boolean
        default: true
        description: "Run JSON-RPC Relay Regression Panel"
      enable-block-node-regression-panel:
        required: true
        type: boolean
        default: true
        description: "Run Block Node Regression Panel"
      additional-parameters:
        # Expected additional parameters (all optional):
        #   { "solo-version": "vX.Y.Z" } # for a specific solo version
        #   { "helm-release": "mirror" } # for a specific helm release name
        #   { "solo-version": "vX.Y.Z", "helm-release-name": "mirror" } # for multiple
        required: false
        type: string
        description: "Additional Parameters (json format): solo-version, helm-release"
        default: "{}"

permissions:
  id-token: write
  actions: write
  pull-requests: write
  statuses: write
  checks: write
  contents: read

defaults:
  run:
    shell: bash

jobs:
  parameters:
    name: Workflow Parameters
    runs-on: hiero-citr-linux-medium
    outputs:
      solo-version: ${{ steps.set-outputs.outputs.solo-version }}
      helm-release-name: ${{ steps.set-outputs.outputs.helm-release-name }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Print Params
        run: |
            echo "Commit SHA: ${{ inputs.commit_sha }}"
            echo "Branch Name: ${{ inputs.branch_name }}"
            echo "Enable Extended Test Suite: ${{ inputs.enable-extended-test-suite }}"
            echo "Enable Abbreviated Panel: ${{ inputs.enable-abbreviated-panel }}"
            echo "Enable Hedera Node JRS Panel: ${{ inputs.enable-hedera-node-jrs-panel }}"
            echo "Enable SDK TCK Regression Panel: ${{ inputs.enable-sdk-tck-regression-panel }}"
            echo "Enable Mirror Node Regression Panel: ${{ inputs.enable-mirror-node-regression-panel }}"
            echo "Enable JSON-RPC Relay Regression Panel: ${{ inputs.enable-rpc-relay-regression-panel }}"
            echo "Enable Block Node Regression Panel: ${{ inputs.enable-block-node-regression-panel }}"
            echo "Additional Parameters: ${{ inputs.additional-parameters }}"
            echo "Solo Version: ${{ fromJson(inputs.additional-parameters).solo-version || vars.CITR_SOLO_VERSION }}"
            echo "Helm Release Name: ${{ fromJson(inputs.additional-parameters).helm-release || 'mirror' }}"
      - name: Set Outputs
        id: set-outputs
        run: |
            echo "solo-version=${{ fromJson(inputs.additional-parameters).solo-version || '' }}" >> "${GITHUB_OUTPUT}"
            echo "helm-release-name=${{ fromJson(inputs.additional-parameters).helm-release || '' }}" >> "${GITHUB_OUTPUT}"

  xts-timing-sensitive-tests:
    name: XTS Timing Sensitive Tests
    if: ${{ inputs.enable-extended-test-suite == true }}
    uses: ./.github/workflows/node-zxc-compile-application-code.yaml
    with:
      custom-job-label: "XTS Timing Sensitive"
      enable-timing-sensitive-tests: true
      enable-network-log-capture: true
      ref: ${{ inputs.commit_sha }}
    secrets:
      access-token: ${{ secrets.GITHUB_TOKEN }}
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}

  xts-time-consuming-tests:
    name: XTS Time Consuming Tests
    if: ${{ inputs.enable-extended-test-suite == true }}
    uses: ./.github/workflows/node-zxc-compile-application-code.yaml
    with:
      custom-job-label: "XTS Time Consuming"
      enable-time-consuming-tests: true
      enable-network-log-capture: true
      ref: ${{ inputs.commit_sha }}
    secrets:
      access-token: ${{ secrets.GITHUB_TOKEN }}
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}

  xts-hammer-tests:
    name: XTS Hammer Tests
    if: ${{ inputs.enable-extended-test-suite == true }}
    uses: ./.github/workflows/node-zxc-compile-application-code.yaml
    with:
      custom-job-label: "XTS Hammer Tests"
      enable-hammer-tests: true
      enable-network-log-capture: true
      ref: ${{ inputs.commit_sha }}
    secrets:
      access-token: ${{ secrets.GITHUB_TOKEN }}
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}

  xts-hapi-time-consuming-tests:
    name: XTS HAPI Tests (Time Consuming)
    if: ${{ inputs.enable-extended-test-suite == true }}
    uses: ./.github/workflows/node-zxc-compile-application-code.yaml
    with:
      custom-job-label: "XTS HAPI Time Consuming"
      enable-hapi-tests-time-consuming: true
      enable-network-log-capture: true
      ref: ${{ inputs.commit_sha }}
    secrets:
      access-token: ${{ secrets.GITHUB_TOKEN }}
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}

  xts-hapi-block-node-comms-tests:
    name: XTS HAPI Tests (Block Node Communication)
    if: ${{ inputs.enable-extended-test-suite == true }}
    uses: ./.github/workflows/node-zxc-compile-application-code.yaml
    with:
      custom-job-label: "XTS HAPI Block Node Comms"
      enable-hapi-tests-bn-communication: true
      enable-network-log-capture: true
      ref: ${{ inputs.commit_sha }}
    secrets:
      access-token: ${{ secrets.GITHUB_TOKEN }}
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}

  abbreviated-panel:
    name: JRS Panel
    if: ${{ inputs.enable-abbreviated-panel == true }}
    uses: ./.github/workflows/zxc-jrs-regression.yaml
    with:
      custom-job-name: "Dry-Run: Platform SDK"
      panel-config: "configs/suites/GCP-PRCheck-Abbrev-4N.json"
      ref: ${{ inputs.commit_sha }}
      branch-name: ${{ inputs.branch_name }}
      base-branch-name: ${{ inputs.branch_name }}
      slack-results-channel: "regression-test"
      slack-summary-channel: "regression-test"
      use-branch-for-slack-channel: false
    secrets:
      access-token: ${{ secrets.PLATFORM_GH_ACCESS_TOKEN }}
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
      jrs-ssh-user-name: ${{ secrets.PLATFORM_JRS_SSH_USER_NAME }}
      jrs-ssh-key-file: ${{ secrets.PLATFORM_JRS_SSH_KEY_FILE }}
      gcp-project-number: ${{ secrets.PLATFORM_GCP_PROJECT_NUMBER }}
      gcp-sa-key-contents: ${{ secrets.PLATFORM_GCP_KEY_FILE }}
      slack-api-token: ${{ secrets.PLATFORM_SLACK_API_TOKEN }}
      grafana-agent-username: ${{ secrets.GRAFANA_AGENT_USERNAME }}
      grafana-agent-password: ${{ secrets.GRAFANA_AGENT_PASSWORD }}

  hedera-node-jrs-panel:
    name: Hedera Node JRS Panel
    if: ${{ inputs.enable-hedera-node-jrs-panel == true }}
    uses: ./.github/workflows/zxc-jrs-regression.yaml
    with:
      custom-job-name: "Dry-Run: Abbrev Update Test"
      ref: ${{ inputs.commit_sha }}
      branch-name: ${{ inputs.branch_name }}
      hedera-tests-enabled: true
      use-branch-for-slack-channel: false
      panel-config: "configs/services/suites/daily/GCP-Daily-Services-Abbrev-DAB-Update-4N-2C.json"
    secrets:
      access-token: ${{ secrets.PLATFORM_GH_ACCESS_TOKEN }}
      jrs-ssh-user-name: ${{ secrets.PLATFORM_JRS_SSH_USER_NAME }}
      jrs-ssh-key-file: ${{ secrets.PLATFORM_JRS_SSH_KEY_FILE }}
      gcp-project-number: ${{ secrets.PLATFORM_GCP_PROJECT_NUMBER }}
      gcp-sa-key-contents: ${{ secrets.PLATFORM_GCP_KEY_FILE }}
      slack-api-token: ${{ secrets.PLATFORM_SLACK_API_TOKEN }}
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
      grafana-agent-username: ${{ secrets.GRAFANA_AGENT_USERNAME }}
      grafana-agent-password: ${{ secrets.GRAFANA_AGENT_PASSWORD }}

  sdk-tck-regression-panel:
    name: SDK TCK Regression Panel
    needs:
      - parameters
    if: ${{ inputs.enable-sdk-tck-regression-panel == true }}
    uses: ./.github/workflows/zxc-tck-regression.yaml
    with:
      ref: ${{ inputs.commit_sha }} # pass the xts-candidate tag to the JRS panel for checkout
      custom-job-name: "Dry-Run: SDK TCK Regression"
      solo-version: ${{ needs.parameters.outputs.solo-version != '' || 'v0.38.0' }}
    secrets:
      access-token: ${{ secrets.GH_ACCESS_TOKEN }}
      slack-tck-report-webhook: ${{ secrets.SLACK_TCK_MONITOR_WEBHOOK }}
      slack-detailed-report-webhook: ${{ secrets.SLACK_CITR_DETAILED_REPORTS_WEBHOOK }}

  mirror-node-regression-panel:
    name: Mirror Node Regression Panel
    needs:
      - parameters
    if: ${{ inputs.enable-mirror-node-regression-panel == true }}
    uses: ./.github/workflows/zxc-mirror-node-regression.yaml
    with:
      ref: ${{ inputs.commit_sha }} # pass the xts-candidate tag to the MN panel for checkout
      custom-job-name: "Mirror Node Regression"
      solo-version: ${{ needs.parameters.outputs.solo-version != ''  || vars.CITR_SOLO_VERSION }}
      helm-release-name: ${{ needs.parameters.outputs.helm-release-name != ''  || 'mirror' }}
    secrets:
      access-token: ${{ secrets.GH_ACCESS_TOKEN }}
      slack-detailed-report-webhook: ${{ secrets.SLACK_CITR_DETAILED_REPORTS_WEBHOOK }}

  json-rpc-relay-regression-panel:
    name: JSON-RPC Relay Regression Panel
    needs:
      - parameters
    if: ${{ inputs.enable-rpc-relay-regression-panel == true }}
    uses: ./.github/workflows/zxc-json-rpc-relay-regression.yaml
    with:
      ref: ${{ inputs.commit_sha }} # pass the xts-candidate tag to the RPC Relay panel for checkout
      custom-job-name: "JSON-RPC Relay Regression"
      solo-version: ${{ needs.parameters.outputs.solo-version != ''  || vars.CITR_SOLO_VERSION }}
    secrets:
      access-token: ${{ secrets.GH_ACCESS_TOKEN }}
      slack-detailed-report-webhook: ${{ secrets.SLACK_CITR_DETAILED_REPORTS_WEBHOOK }}

  block-node-regression-panel:
    name: Block Node Regression Panel
    needs:
      - parameters
    if: ${{ inputs.enable-block-node-regression-panel == true }}
    uses: ./.github/workflows/zxc-block-node-regression.yaml
    with:
      ref: ${{ inputs.commit_sha }} # pass the xts-candidate tag to the BN panel for checkout
      custom-job-name: "Dry Run: Block Node Regression"
      solo-version: ${{ needs.parameters.outputs.solo-version != ''  || 'v0.46.1' }}
    secrets:
      access-token: ${{ secrets.GH_ACCESS_TOKEN }}
      slack-detailed-report-webhook: ${{ secrets.SLACK_CITR_DETAILED_REPORTS_WEBHOOK }}
