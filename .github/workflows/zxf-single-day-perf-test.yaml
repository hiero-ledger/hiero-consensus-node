# SPDX-License-Identifier: Apache-2.0
name: "ZXF: [CITR] Single Day Performance Test"
on:
  workflow_dispatch:
    inputs:
      tag-to-run:
        description: "The tag to run CITR SDPT against"
        required: true

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  verify-tag:
    name: Verify Tag
    runs-on: hiero-network-node-linux-medium
    outputs:
      build-number: ${{ steps.verify-tag.outputs.build-number }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout Consensus Node
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.inputs.tag-to-run }}

      - name: Verify Tag
        env:
          PROMOTED_GREP_PATTERN: "build-.{5}" # Pattern to match build tags (e.g., build-12345)
          CHECK_TAG: "${{ github.event.inputs.tag-to-run }}"
        run: |
          # Ensure the tag that we received is a build tag
          # if the tag is a build tag then we can parse out the build number (the last 5 characters)
          # return the build tag as an output
          # if the tag is not a build tag then we will fail the workflow
          if [[ "${CHECK_TAG}" =~ ${PROMOTED_GREP_PATTERN} ]]; then
            echo "The tag is a valid build tag."
            BUILD_NUMBER="${CHECK_TAG: -5}"
            echo "build-number=${BUILD_NUMBER}" >> $GITHUB_OUTPUT
          else
            echo "::error title=Invalid Tag::The provided tag (${github.event.inputs.tag-to-run}) is not a valid build tag."
            exit 1
          fi

  run-single-day-performance-test:
    name: Run Single Day Performance Test
    needs: verify-tag
    if: ${{ needs.verify-tag.result == 'success' }}
    uses: .github/workflows/zxf-run-single-day-performance-test.yml
    with:
      namespace: "Latitude4",
      hcn-version: "${{ github.event.inputs.tag-to-run }}",
      solo-version: "latest_tested_solo-charts0.59",
      nlg-accounts: "100000000",
      nlg-time: "330m",
      nlg-time3: "2h",
      add-app-props: "",
      add-settings: "",
      crypto-bench-merkle-db-java-args: "-XX:+UseZGC -XX:+ZGenerational -XX:ZAllocationSpikeTolerance=2 -XX:ConcGCThreads=14 -XX:ZMarkStackSpaceLimit=12g -XX:MaxDirectMemorySize=24g -Xmx90g",
      crypto-bench-merkle-db-test-params: "-p maxKey=500000000 -p numRecords=100000 -p keySize=24 -p recordSize=1024 -p numFiles=6000"

  tag-sdpt-passing:
    name: Tag SDPT Passing
    runs-on: hiero-network-node-linux-medium
    needs:
      - run-single-day-performance-test
    if: ${{ needs.run-citr-performance-test.outputs.result  == 'success' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout Consensus Node
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.inputs.tag-to-run }}

      - name: Tag SDPT Passing
        run: |
          git tag --annotate "sdpt-pass-${{ jobs.verify-tag.outputs.build-number }}" --message "Single Day Performance Test passed for build-${{ jobs.verify-tag.outputs.build-number }}"
          git push origin "sdpt-pass-${{ jobs.verify-tag.outputs.build-number }}" --force

  get-commit-info:
    name: Get Commit Information
    runs-on: hiero-network-node-linux-medium
    needs:
      - verify-tag
    outputs:
      commit-author: ${{ steps.find-commit-author-slack.outputs.commit-author }}
      commit-email: ${{ steps.find-commit-author-slack.outputs.commit-email }}
      slack-user-id: ${{ steps.find-commit-author-slack.outputs.slack-user-id }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: "0"
          ref: main
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Find Commit Author in Slack
        id: find-commit-author-slack
        continue-on-error: true
        env:
          BUILD_TAG: ${{ inputs.tag-to-run }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_CITR_BOT_TOKEN }}
        run: |
          # Extract the commit and user information from the build tag
          COMMIT=$(git rev-list -n 1 "${BUILD_TAG}")
          EMAIL=$(git log -1 --pretty=format:'%ae' "${COMMIT}")
          AUTHOR=$(git log -1 --pretty=format:'%an')
          SLACK_USER_ID=$(curl -s -X GET "https://slack.com/api/users.list" \
            -H "Authorization: Bearer ${SLACK_BOT_TOKEN}" | jq -r --arg email "${EMAIL}" \
            '.members[] | select((.profile.email // "" | ascii_downcase) == ($email | ascii_downcase)) | .name')
  
          if [[ -z "${SLACK_USER_ID}" || "${SLACK_USER_ID}" == "null" ]]; then
            echo "No Slack user found for email: ${EMAIL}"
            SLACK_USER_ID="No matching slack user found"
          else
            echo "Found slack user for email: ${EMAIL}"
            SLACK_USER_ID="<@${SLACK_USER_ID}>"
          fi
          echo "slack-user-id=${SLACK_USER_ID}" >> "${GITHUB_OUTPUT}"
          echo "commit-author=${AUTHOR}" >> "${GITHUB_OUTPUT}"
          echo "commit-email=${EMAIL}" >> "${GITHUB_OUTPUT}"

  report-success:
    name: Report SDPT execution success
    runs-on: hiero-network-node-linux-medium
    needs:
      - verify-tag
      - tag-sdpt-passing
      - run-single-day-performance-test
      - get-commit-info
    if: ${{ (needs.verify-tag.result == 'success' &&
      needs.tag-sdpt-passing.result == 'success' &&
      needs.run-single-day-performance-test.outputs.result == 'success' &&
      needs.get-commit-info.result == 'success') &&
      !cancelled() }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Report Success (slack)
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          webhook: ${{ secrets.SLACK_CITR_OPERATIONS_WEBHOOK }}
          webhook-type: incoming-webhook
          payload-templated: true
          payload: |
            {
              "attachments": [
                {
                  "color": "#00FF00",
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": ":tada: Hiero Consensus Node - Single Day Performance Test Passing Report",
                        "emoji": true
                      }
                    },
                    {
                      "type": "divider"
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*SDPT Job Succeeded. Test panel status below*"
                      },
                      "fields": [
                        {
                          "type": "plain_text",
                          "text": "Verify Tag for SDPT"
                        },
                        {
                          "type": "plain_text",
                          "text": "${{ needs.verify-tag.result }}"
                        },
                        {
                          "type": "plain_text",
                          "text": "Run Single Day Performance Test"
                        },
                        {
                          "type": "plain_text",
                          "text": "${{ needs.run-citr-performance-test.outputs.result  }}"
                        },
                        {
                          "type": "plain_text",
                          "text": "Tag SDPT Passing"
                        },
                        {
                          "type": "plain_text",
                          "text": "${{ needs.tag-sdpt-passing.result }}"
                        }
                      ]
                    },
                    {
                      "type": "divider"
                    },
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "*Workflow, Tag, and Commit Information*"
                      },
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*Source Tag*:"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "<${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ inputs.tag-to-run }}>"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Commit author*:"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "${{ needs.get-commit-info.outputs.commit-author }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Workflow run ID*:"
                        },
                        {
                          "type": "mrkdwn",
                          "text": " ${{ github.run_id }}"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "*Workflow run URL*:"
                        },
                        {
                          "type": "mrkdwn",
                          "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>"
                        }
                    }
                ]
              }
            ]
          }

  report-failure:
    name: Report XTS execution failure
    runs-on: hiero-network-node-linux-medium
    needs:
      - verify-tag
      - run-single-day-performance-test
      - tag-sdpt-passing
      - get-commit-info
    if: ${{ (needs.verify-tag.result == 'success' &&
      needs.tag-sdpt-passing.result == 'success' &&
      needs.run-single-day-performance-test.outputs.result == 'success' &&
      needs.get-commit-info.result == 'success') &&
      !cancelled() && always() }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: "0"
          ref: ${{ inputs.tag-to-run }}
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Collect run logs in a log file
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        continue-on-error: true
        run: |
          for job_id in $(gh run view ${{ github.run_id }} --json jobs --jq '.jobs | map(.databaseId) | .[0:-1] | .[]'); do
            echo "Fetching logs for job $job_id..."

            current_job_name=$(gh run view ${{ github.run_id }} --json jobs | jq --argjson job_id "$job_id" -r '.jobs[] | select(.databaseId == $job_id) | .name')

            echo "Logs for job $current_job_name :" >> run.log

            gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/hiero-ledger/hiero-consensus-node/actions/jobs/$job_id/logs >> run.log
          done

      - name: Upload log as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        continue-on-error: true
        with:
          path: run.log

      - name: Build Slack Payload Message
        id: payload
        run: |
          cat <<EOF > slack_payload.json
          {
            "attachments": [
              {
                "color": "#FF0000",
                "blocks": [
                  {
                    "type": "header",
                    "text": {
                      "type": "plain_text",
                      "text": ":grey_exclamation: Hiero Consensus Node - Single Day Performance Test Error Report",
                      "emoji": true
                    }
                  },
                  {
                    "type": "divider"
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*SDPT Job Resulted in failure. See status below.*"
                    },
                    "fields": [
                      {
                        "type": "plain_text",
                        "text": "Verify Tag for SDPT"
                      },
                      {
                        "type": "plain_text",
                        "text": "${{ needs.verify-tag.result }}"
                      },
                      {
                        "type": "plain_text",
                        "text": "Run Single Day Performance Test"
                      },
                      {
                        "type": "plain_text",
                        "text": "${{ needs.run-single-day-performance-test.outputs.result }}"
                      },
                      {
                        "type": "plain_text",
                        "text": "Tag SDPT Passing"
                      },
                      {
                        "type": "plain_text",
                        "text": "${{ needs.tag-sdpt-passing.result }}"
                      },
                      {
                        "type": "plain_text",
                        "text": "Get Commit Information"
                      },
                      {
                        "type": "plain_text",
                        "text": "${{ needs.get-commit-info.result }}"
                      }
                    ]
                  },
                  {
                    "type": "divider"
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "*Workflow, Tag, and Commit Information*"
                    },
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Source Tag*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "<${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ inputs.tag-to-run }}>"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Commit author*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "${{ needs.get-commit-info.outputs.commit-author }}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Slack user*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "${{ needs.get-commit-info.outputs.slack-user-id }}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Workflow run ID*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": " ${{ github.run_id }}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Workflow run URL*:"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}>"
                      }
                    ]
                  }
                ]
              }
            ]
          }
          EOF

      - name: Report failure (slack citr-operations)
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          webhook: ${{ secrets.SLACK_CITR_OPERATIONS_WEBHOOK }}
          webhook-type: incoming-webhook
          payload-templated: true
          payload-file-path: slack_payload.json

      - name: Report failure (slack release-team)
        uses: slackapi/slack-github-action@b0fa283ad8fea605de13dc3f449259339835fc52 # v2.1.0
        with:
          webhook: ${{ secrets.SLACK_RELEASE_TEAM_WEBHOOK }}
          webhook-type: incoming-webhook
          payload-templated: true
          payload-file-path: slack_payload.json
