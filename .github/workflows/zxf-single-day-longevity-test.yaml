# SPDX-License-Identifier: Apache-2.0
name: "ZXF: [CITR] Single Day Canonical Tests (SDCT)"
on:
  workflow_dispatch:
    inputs:
      ref:
        required: true
        default: "main"
        description: "Version of hiero-consensus-node: branch, tag, commit."
        type: string
      build-tag:
        required: true
        description: "build-XXXXX tag associated with the ref input."
        type: string

defaults:
  run:
    shell: bash

env:
  VERSION_MIRRORNODE: "custom"

  USERNAME: ${{ secrets.TESTING_JENKINS_API_USERNAME }}
  PASSWORD: ${{ secrets.TESTING_JENKINS_API_PASSWORD }}
  SERVER: ${{ secrets.TESTING_JENKINS_API_SERVER }}

permissions:
  id-token: write
  contents: read

jobs:
  canonical-test:
    name: Canonical (10 hour)
    runs-on: hiero-citr-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Authenticate to Google Cloud
        uses: step-security/google-github-auth@40f6deebd366f16c782d7a0ad0844e3b96a032a6 # v2.1.10
        with:
          workload_identity_provider: "projects/235822363393/locations/global/workloadIdentityPools/hedera-builds-pool/providers/hedera-builds-gh-actions"
          service_account: "hedera-artifact-builds@devops-1-254919.iam.gserviceaccount.com"

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@77e7a554d41e2ee56fc945c52dfd3f33d12def9a # v2.1.4

      - name: Verify Workflow Parameters
        id: parameters
        run: |

          BRANCH_NAME="${{ inputs.ref }}"
          BRANCH_NAME="${BRANCH_NAME##origin/}"
          BRANCH_NAME_LOWER="$(echo "${BRANCH_NAME}" | tr '[:upper:]' '[:lower:]')"
          BRANCH_NAME_SAFE="$(echo "${BRANCH_NAME_LOWER}" | tr '/' '-' | tr '_' '.')"
          LATEST_BUILD_TAG="${{ inputs.build-tag }}"
          TAG_COMMIT_SHA=$(git rev-list -n 1 ${LATEST_BUILD_TAG})
          TAG_COMMIT_SHORT=$(echo ${TAG_COMMIT_SHA} | cut -c1-8)

          echo "branch-name-lower=${BRANCH_NAME_SAFE}" >>"${GITHUB_OUTPUT}"
          echo "commit-id-short=${TAG_COMMIT_SHORT}" >> "${GITHUB_OUTPUT}"

      - name: Check If Release Artifact Exist in Bucket
        id: check-if-exist
        run: |
          set +e
          ARTIFACT_NAME="build-${{ steps.parameters.outputs.branch-name-lower }}-${{ steps.parameters.outputs.commit-id-short }}"
          ARTIFACT_PATH="gs://${{ secrets.RELEASE_ARTIFACT_BUCKET_NAME }}/${ARTIFACT_NAME}.zip"
          echo "ARTIFACT_PATH=${ARTIFACT_PATH}"

          while true
          do
            gsutil -q stat "${ARTIFACT_PATH}"
            PATH_EXIST=$?
            if [ ${PATH_EXIST} -eq 0 ]; then
              echo "Artifact Ready"
              break
            else
              echo "Artifact not ready, wait 2 minutes"
              sleep 2m
            fi
          done
          echo "build-version=${ARTIFACT_NAME}" >>"${GITHUB_OUTPUT}"

